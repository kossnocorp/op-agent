name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
          - os: linux
            arch: arm64
            goos: linux
            goarch: arm64
          # macOS
          - os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
          # Windows
          - os: windows
            arch: amd64
            goos: windows
            goarch: amd64
            ext: .exe
          - os: windows
            arch: arm64
            goos: windows
            goarch: arm64
            ext: .exe

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true

    - name: Install just
      uses: extractions/setup-just@v2

    - name: Get version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        VERSION: ${{ steps.version.outputs.version }}
      run: |
        go build -ldflags="-s -w" -o ./dist/op-agent-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} ./cmd/op-agent
        go build -ldflags="-s -w" -o ./dist/op-agent-client-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} ./cmd/op-agent-client

    - name: Generate checksums
      working-directory: ./dist
      run: |
        sha256sum op-agent-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} > op-agent-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256
        sha256sum op-agent-client-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} > op-agent-client-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256

    - name: Generate build provenance attestation for op-agent
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: './dist/op-agent-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}'

    - name: Generate build provenance attestation for op-agent-client
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: './dist/op-agent-client-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}'

    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          ./dist/op-agent-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          ./dist/op-agent-client-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          ./dist/op-agent-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256
          ./dist/op-agent-client-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Get version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        merge-multiple: true

    - name: Create comprehensive checksums file
      working-directory: ./artifacts
      run: |
        find . -name "*.sha256" -exec cat {} \; > checksums.txt
        sha256sum checksums.txt > checksums.txt.sha256

    - name: Generate release notes
      id: release_notes
      run: |
        # Extract release notes from CHANGELOG.md if it exists
        if [ -f CHANGELOG.md ] && grep -q "## v${{ steps.version.outputs.version }}" CHANGELOG.md; then
          # Extract content between this version and the next version header
          sed -n "/## v${{ steps.version.outputs.version }}/,/## v/p" CHANGELOG.md | sed '$d' | tail -n +2 > release_notes.txt
        else
          echo "Release v${{ steps.version.outputs.version }}" > release_notes.txt
          echo "" >> release_notes.txt
          echo "## Verification" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "All binaries in this release are cryptographically signed and can be verified using:" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "\`\`\`bash" >> release_notes.txt
          echo "gh attestation verify <binary> --owner \${GITHUB_REPOSITORY_OWNER}" >> release_notes.txt
          echo "\`\`\`" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "SHA256 checksums are provided for all binaries." >> release_notes.txt
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release v${{ steps.version.outputs.version }}
        body_path: release_notes.txt
        files: |
          ./artifacts/op-agent-*
          ./artifacts/checksums.txt
          ./artifacts/checksums.txt.sha256
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        generate_release_notes: true